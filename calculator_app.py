# Generated by AgentMesh - Calculator Application
# Original Task: create a calculator application
# This is a simple calculator with GUI using Tkinter

import tkinter as tk
from tkinter import messagebox

def calculate(expression: str) -> None:
    """
    Evaluate the expression and update the text field with the result.
    """
    try:
        result = eval(expression)
        text_field.set(result)
    except Exception as e:
        messagebox.showerror("Error", "Invalid Expression")

def clear() -> None:
    """
    Clear the text field.
    """
    text_field.set("")

def append_to_expression(value: str) -> None:
    """
    Append the value to the current expression in the text field.
    """
    current_expression = str(text_field.get())
    new_expression = current_expression + str(value)
    text_field.set(new_expression)

if __name__ == "__main__":
    window = tk.Tk()
    window.title("Calculator")

    text_field = tk.StringVar()

    entry = tk.Entry(window, textvariable=text_field)
    entry.grid(row=0, column=0, columnspan=4)

    buttons = [
        '7', '8', '9', '/',
        '4', '5', '6', '*',
        '1', '2', '3', '-',
        '.', '0', '=', '+'
    ]

    row_val = 1
    col_val = 0

    for button in buttons:
        action = lambda x=button: append_to_expression(x) if x != "=" else calculate(str(text_field.get()))
        tk.Button(window, text=button, width=5, command=action).grid(row=row_val, column=col_val)
        col_val += 1
        if col_val > 3:
            col_val = 0
            row_val += 1

    clear_button = tk.Button(window, text='Clear', width=20, command=clear)
    clear_button.grid(row=row_val, column=0, columnspan=4)

    window.mainloop()